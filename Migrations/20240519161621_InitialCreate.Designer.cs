// <auto-generated />
using System;
using CourtManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourtManagement.Migrations
{
    [DbContext(typeof(CourtBookingContext))]
    [Migration("20240519161621_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourtManagement.Models.Booking", b =>
                {
                    b.Property<string>("BookingId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateOnly>("Bookingdate")
                        .HasColumnType("date");

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<int>("Totalprice")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951AED157D3D7C");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.Comment", b =>
                {
                    b.Property<string>("CommentId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CourtSlotId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime?>("DateReplied")
                        .HasColumnType("datetime");

                    b.Property<string>("ReplyText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFCA40228F9D");

                    b.HasIndex("CourtSlotId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CourtManagement.Models.Court", b =>
                {
                    b.Property<string>("CourtId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<TimeOnly>("Closetime")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Openday")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeOnly>("Opentime")
                        .HasColumnType("time");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CourtId")
                        .HasName("PK__Court__C3A67C9A3210AC12");

                    b.ToTable("Court", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.CourtSlot", b =>
                {
                    b.Property<string>("CourtslotId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BookingId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CourtId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Endtime")
                        .HasColumnType("time");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<TimeOnly>("Starttime")
                        .HasColumnType("time");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CourtslotId")
                        .HasName("PK__CourtSlo__C632D55B123E7212");

                    b.HasIndex("BookingId");

                    b.HasIndex("CourtId");

                    b.ToTable("CourtSlot", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BookingId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ExternalVnPayTransactionCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Paytime")
                        .HasColumnType("datetime");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A384382C024");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1A54A3586A");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Qrcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4C21571AF2");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.UserDetail", b =>
                {
                    b.Property<string>("UserDetailId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("UserDetailId")
                        .HasName("PK__UserDeta__564F56B24AA06B56");

                    b.HasIndex("UserId");

                    b.ToTable("UserDetail", (string)null);
                });

            modelBuilder.Entity("CourtManagement.Models.Booking", b =>
                {
                    b.HasOne("CourtManagement.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Booking__UserId__31EC6D26");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtManagement.Models.Comment", b =>
                {
                    b.HasOne("CourtManagement.Models.CourtSlot", "CourtSlot")
                        .WithMany("Comments")
                        .HasForeignKey("CourtSlotId")
                        .HasConstraintName("FK__Comments__CourtS__33D4B598");

                    b.HasOne("CourtManagement.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comments__UserId__32E0915F");

                    b.Navigation("CourtSlot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtManagement.Models.CourtSlot", b =>
                {
                    b.HasOne("CourtManagement.Models.Booking", "Booking")
                        .WithMany("CourtSlots")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__CourtSlot__Booki__35BCFE0A");

                    b.HasOne("CourtManagement.Models.Court", "Court")
                        .WithMany("CourtSlots")
                        .HasForeignKey("CourtId")
                        .HasConstraintName("FK__CourtSlot__Court__34C8D9D1");

                    b.Navigation("Booking");

                    b.Navigation("Court");
                });

            modelBuilder.Entity("CourtManagement.Models.Payment", b =>
                {
                    b.HasOne("CourtManagement.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Payment__Booking__36B12243");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("CourtManagement.Models.User", b =>
                {
                    b.HasOne("CourtManagement.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleId__37A5467C");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CourtManagement.Models.UserDetail", b =>
                {
                    b.HasOne("CourtManagement.Models.User", "User")
                        .WithMany("UserDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserDetai__UserI__38996AB5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtManagement.Models.Booking", b =>
                {
                    b.Navigation("CourtSlots");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CourtManagement.Models.Court", b =>
                {
                    b.Navigation("CourtSlots");
                });

            modelBuilder.Entity("CourtManagement.Models.CourtSlot", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("CourtManagement.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CourtManagement.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Comments");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
